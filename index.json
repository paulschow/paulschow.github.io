[{"content":"","date":"16 January 2023","permalink":"/","section":"Paul's Projects","summary":"","title":"Paul's Projects"},{"content":"","date":"16 January 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"Short guide to getting pictures from a Minolta RD-175.  Recently I\u0026rsquo;ve gotten into collecting old digital cameras. It\u0026rsquo;s an interesting hobby, because most of these cameras went from being state-of-the-art and expensive to outdated and useless in a few years.\nMy most recent example of this is the Minolta RD-175 (aka Agfa ActionCam). This early digital SLR came out in 1995 and cost $10,000. In 2022 I was able to buy an almost-unused one for around $50.\nThis camera came out before USB, so the only connector is SCSI, and the only memory card is a PCMCIA hard drive. This makes it a bit difficult to get pictures off of the camera.\nTo make things even more difficult, the camera won\u0026rsquo;t work with anything except specially-formatted PCMCIA cards, and the only way to format the cards is using the SCSI cable.\nThere is a way around this: take a disk image of the card and write it to any PCMCIA card, and it will work.\nReference:\nhttp://thecameracollectors.blogspot.com/2011/05/how-to-clone-minolta-rd-175-cards.html\nhttps://www.nikonweb.com/actioncam/\nThe problem is, all of the links in those blogs are dead. Luckily I had a friend (thanks Zeek!) who was working on the same problem. With his help, I was able to get a working SCSI cable and make my own disk image.\nCard Formatting Guide # Here\u0026rsquo;s a quick guide on getting the RD-175 working:\nThings you need: Compact Flash (CF) card 256MB or greater, and a CF to PCMCIA adapter, as well as a card reader.\n  Some cards and adapters I\u0026rsquo;ve tested that work    Download the disk image I made:\nArchive.org mirror https://archive.org/details/rd175_256\n  Write the disk image to your CF card\n  On Linux, use DD:\n(Where sdX is the card being written)\nsudo dd if=rd175_256.img of=/dev/sdX\n  On Windows, you can use balenaEtcher, win32diskimager, or Rufus. Write the image to the card using one of those utilities.\n    After being formatted, the card should contain a single \u0026ldquo;MDC.CTL\u0026rdquo; file and nothing else. This file is required for the RD-175 to recognize the camera. The file may be hidden depending on your operating system settings.\n     Use the CF to PCMCIA adapter to insert the formatted CF card into your RD-175.     Turn on the RD-175. If all was successful, you should see \u0026ldquo;199\u0026rdquo; in the image counter.     \nImage Conversion Guide # The RD-175 saves images in the \u0026ldquo;.mdc\u0026rdquo; format. Luckily, the Minolta software that converts these files is still hosted on their website, and still works on Windows 10! It also works fine in WINE.\n  Download the software RD17520E.EXE\nMinolta mirror https://www.konicaminoltasupport.com/index.php?id=3990\u0026amp;L=894\nArchive.org mirror https://archive.org/details/rd-17520-e\n  Install the software on Windows or in WINE.\n  Start the RD-175 software. If all went well, you should get this:\n     From here, select your CF card or other folder where you saved the .mdc files.     You should see thumbnails of your images at this point.      You can select individual images to convert, or just press \u0026ldquo;select all\u0026rdquo; to grab all of them.\nThere are some other options here:\n  \u0026ldquo;Sharpness\u0026rdquo; will apply a sharpening filter to the images prior to exporting.\n  \u0026ldquo;Chromatic Filter\u0026rdquo; will apply an anti-chromatic aberration filter to the images.\n    After selecting the images, press \u0026ldquo;save\u0026rdquo;. You\u0026rsquo;ll get the dialog to select where to save the exported images.\n      You can select format here.\n  If you select JPEG, you can press the \u0026ldquo;Setting\u0026rdquo; button to select the JPEG image quality.\n  I usually save as TIFF if I want to process the photo further, or JPEG if I just want to share it directly.\n    Press OK and the images will be saved!\n     Note, some other software (example DarkTable or RawTherapee) may be able to import the .mdc files directly. Any software that uses dcraw should work.    Photo of a squirrel I took with the RD-175  \nOther Notes #   The maximum card size the RD-175 will format is 260MB, so the 256MB card image I made is close to the limit.\n  If you want to get SCSI working yourself, you\u0026rsquo;ll need a \u0026ldquo;Centronics Micro D 50 Male\u0026rdquo; cable, such as this one. I plan to write a full guide to getting SCSI working at some point. SCSI is required to set the date and time on the camera.\n  The RD-175 doesn\u0026rsquo;t have a bulb mode, and it won\u0026rsquo;t let you take pictures without the lens attached, so cleaning the sensor is a problem. Zeek found an undocumented mode that allows the camera to work without the lens:\n Hold the Self timer (on the top) and AV (on the back) buttons while powering the camera up. On the LCD display, you\u0026rsquo;ll see a dialog pop up with it saying \u0026ldquo;on\u0026rdquo; and \u0026ldquo;rE\u0026rdquo;. To reverse this, hold the buttons again while turning the camera on. Once you\u0026rsquo;ve turned on RE mode, you can set the shutter speed to the longest time (1/2 second), take the lens off, and fire the shutter while using an air blower to clean the sensor. You can also use RE mode to use the camera with a non-chipped Minolta lens.      RE mode on the RD-175    There are more button combinations, but I haven\u0026rsquo;t been able to figure out what they do:\n To enable \u0026ldquo;BL\u0026rdquo; mode, hold the Flash and +/- buttons while turning the camera on. To enable \u0026ldquo;AL\u0026rdquo; mode, hold down Self Timer and Red Eye while turning the camera on.    \nReferences #  RD-175 manual https://archive.org/details/rd-175-hw RD-175 software manual https://archive.org/details/manualzz-id-1126519 Dyxum forum thread https://www.dyxum.com/DFORUM/all-about-minolta-rd175_topic103895_page1.html RD-175 160MB card image https://archive.org/details/rd175_202211 Konica Minolta support page https://www.konicaminoltasupport.com/index.php?id=1083  \nThis post is licensed under CC BY 4.0 \r\r\r \r\r\r\r\r ","date":"16 January 2023","permalink":"/posts/rd-175/","section":"Posts","summary":"Short guide to getting pictures from a Minolta RD-175.","title":"Using a Minolta RD-175 in 2023"},{"content":"It\u0026rsquo;s been awhile since I\u0026rsquo;ve posted anything here! Not for lack of content, but because I\u0026rsquo;ve been too busy to properly document any of my projects.\nThere have been some barriers to posting as well. At some point, google made a change to blogger that broke a significant amount of images on my blog (and most other blogger blogs).\nReference this helpful post: https://too-clever-by-half.blogspot.com/2018/01/google-album-archive-photos-blogger.html\nI had never been fully happy with the blogger service in the first place, and this killed any enthusiasm I had towards it.\nThe modern thing is to convert your blog to a static site generator, and host it somewhere like github. So that\u0026rsquo;s exactly what I did.\nI settled on using Hugo, mainly because I tried using Jekyll and could not get the blogger importer to work at all. To import, I used the great blog2md script to convert the blogger xml file into markdown. But, those markdown files still contained links to the images hosted on blogger, many of which no longer worked.\nBecause of some google photos nonsense, a lot of the images only loaded when I was logged into my google account. I created a script that would use the Selenium driver for Firefox to grab and save all the of files, and replace the images in the markdown.\nThis script is saved as a Gist here: https://gist.github.com/paulschow/273f14698e09e7b0435334cba093a160\nSome of the photos wouldn\u0026rsquo;t load at all, so I had to go through the archive.org backup and download them from there, but that only happened with one post.\nI know there\u0026rsquo;s still some broken stuff on the new site (youtube embeds and code blocks at least) and I will be working on fixing those soon.\nNew posts soon(ish)!!\n","date":"24 December 2022","permalink":"/posts/updated/","section":"Posts","summary":"It\u0026rsquo;s been awhile since I\u0026rsquo;ve posted anything here!","title":"Blog Updated"},{"content":"My previous post about my epaper business card attracted a lot of attention, most of it good. After publishing that project I was contacted by Pervasive Displays, who offered to send me an epaper demo kit in exchange for me writing something about it.\nThis isn\u0026rsquo;t really a proper review, more of a look at the screens and their software. For a better review, check out this one by Rei Vilo.\nWhat they sent me was their EPD Extension Kit Gen 2 ($25), along with a TI EK-TM4C123GXL Launchpad ($13.49) and a nice selection of screens.\n         The EPD Extension Kit Gen 2 is better than the Gen 1 extension kit because it supports both types of screens that Pervasive Displays has: Internal Timing Control (iTC) and External Timing Control (eTC). It works with all of their current displays from 1.44\u0026quot; to 4.2\u0026quot;. That includes the color displays!\n   I received four screens:\n 2.15\u0026quot; iTC ($15.50) 2.71\u0026quot; eTC ($25.00) 2.87\u0026quot; iTC Color ($29.03) 4.2\u0026quot; iTC Color ($48.75)  Prices are the current from Digi-Key, and might be different by the time you read this. Of course, you don\u0026rsquo;t need to buy everything I have just to mess around with epaper, and they have a wide variety of kits on their site.\nOne of the best parts about this kit is the software they wrote to go along with it. Under the \u0026ldquo;Utility\u0026rdquo; tab of their EPD Extension Kit Gen 2 website you can download the \u0026ldquo;PDI Apps\u0026rdquo; tool. Unfortunately they require you to fill out a registration form to get an email with the download link, but it\u0026rsquo;s worth it.\n   Using their software makes messing around with the screens a lot easier than what I was doing before. With my epaper card I had to take every file, crop it, change the file type, change the file names in the source code, and reupload to the microcontroller. This made testing different images a pain. Using the PDI Apps software, you can just browse to any folder click an image to display it right away.\nTo go along with the PDI Apps software, the user\u0026rsquo;s guide (under \u0026ldquo;Supported Platform\u0026rdquo;) is really nicely written and easy to understand.\n   One example of a page from the user\u0026rsquo;s guide, showing how to connect the displays\nThe user\u0026rsquo;s guide covers way more than I\u0026rsquo;m covering in this \u0026ldquo;review\u0026rdquo;, so make sure to give it a look if you\u0026rsquo;re thinking about picking up this kit.\nImportantly, the user\u0026rsquo;s guide contains this dip switch setting table:\n   When changing display types, it\u0026rsquo;s important to set the dip switches on the bottom on the board to match the correct display. This is a bit unfortunate as you have to remove the board from the launchpad to change the dip switch, but it\u0026rsquo;s not really that big of a deal.\nOnce you\u0026rsquo;ve got the software installed, the dip switch set correctly, and the screen attached, it\u0026rsquo;s ready to go.\n2.15\u0026quot; Monochrome iTC # I started by looking at the 2.15\u0026quot; screen. It\u0026rsquo;s the smallest and the cheapest of the screens I got. Pervasive Displays does make smaller, cheaper screens (2\u0026quot;, 1.9\u0026quot;, and 1.44\u0026quot;).\n   2.15\u0026quot; Screen\nThe screen is almost the same as the 2\u0026quot; one I used for my business card, but with internal timing control and a bit larger. It\u0026rsquo;s actually fun to use the PDI Apps software to go through random images and see how they look on a small epaper screen, something that would have been a chore the old way.\n2.71\u0026quot; Monochrome eTC \u0026amp; Partial Updates # The 2.71\u0026quot; screen is much the same. It\u0026rsquo;s larger but still monochrome. I can use it to show off a really cool feature: partial updates. Normally if you want to change an image on an eink display it has to refresh the entire screen with a blinking effect. This makes the frame rate very slow, and limits the applications you can do with it.\nPervasive Displays has a partial update technology that enables much faster display updates.\nThis really opens up the possible applications for epaper. I\u0026rsquo;ve already got a few projects in mind for this.\nThe PDI Apps software comes with two partial update demos for the 2.71\u0026quot; display. The partial update screen is called \u0026ldquo;Fast update\u0026rdquo;.\n         One demo is a thermostat, and the other is a rocket launching with some text. The time between images can be set in milliseconds, with a default of 400ms (2.5 frames per second) for each image. This can be increased (or decreased) but the results aren\u0026rsquo;t that great. I made a short video to show the difference between the rocket animation at 400ms (2.5 fps) and 100ms (10 fps).\nAs you can see, the display looks pretty incredible at 400ms! At 100ms there is noticeable ghosting and the text is harder to read. At something like 33ms (30 fps) it just becomes a blur. You\u0026rsquo;re not going to get 30fps video out of this screen, and that\u0026rsquo;s to be expected. Even at 400ms it really opens up a lot of new ideas for me about epaper display projects.\n2.87\u0026quot; Spectra iTC # Partial update is impressive, but what\u0026rsquo;s even cooler is the three color screens. These display black, white, and red. After looking at two-color epaper displays for so long, it\u0026rsquo;s weird to see one with a nice red on it.\n   This is where the PDI Apps software gets really fun. You can load up any full-color image and see it displayed on the epaper display a few seconds later.\n   Pervasive Displays provides a few demo images, like the KFC logo.\n            Even though it\u0026rsquo;s only one color, seeing it on an epaper display is really nice. If you are only doing a project using the monochrome display, I would still suggest picking up a color one just to mess around with. I\u0026rsquo;m even considering making an even more impractical color version of my business card, just because of how cool it looks.\n4.2\u0026quot; Spectra iTC # The color 4.2\u0026quot; display is the biggest and most expensive, but also the coolest. You could fit a ton of information on this one, and it looks just as great.\n   Playing around with the software and loading on random images is a blast.\n      The best uses for a display like this are probably monochrome images with some kind of red highlight, but it\u0026rsquo;s always interesting to load up some random pictures and see what happens.\nSummary # If you\u0026rsquo;re prototyping anything involving epaper, this board is a great starting point. Even if you\u0026rsquo;re not using the same microcontroller, the ability to load an image directly on to the screen and instantly see what it looks like is incredibly helpful. At $25 + $13.49 for the Extension Kit board and a Launchpad, it\u0026rsquo;s a cheap prototyping solution. If you\u0026rsquo;re picking one up, you might as well order one of the Spectra screens just to mess around with. Pros: #  Enables very fast epaper testing User\u0026rsquo;s guide is comprehensive and understandable PDI Apps software works well The screens look great Reasonably priced  Cons: #  Registration required to get the software DIP switches on the back of the board Software only runs on windows  ","date":"25 February 2017","permalink":"/2017/02/pervasive-displays-epd-extension-kit.html","section":"Posts","summary":"My previous post about my epaper business card attracted a lot of attention, most of it good.","title":"Pervasive Displays EPD Extension Kit Gen 2 Review"},{"content":"Recently, after graduating with a EE degree from the University of Colorado Colorado Springs and working at X-IO for a few months, I found myself out of a job. This gave me plenty of time to work on projects! (Update: I have a full-time position now!)\nI realized that it might be nice to have business cards. The problem with normal (paper) business cards is that once I got hired they would all be obsolete. The solution: use epaper to have a business card you can program with new information at any time!\nObviously this isn\u0026rsquo;t actually a very practical solution. However, I am a big fan of \u0026ldquo;usefulness optional\u0026rdquo; projects. Even if the end result is too expensive to actually hand out to anyone, it\u0026rsquo;s still a neat learning exercise for fit-to-envelope and ultra-low-power design.\nI decided on a few things that I wanted my design to have:\n Epaper display Size of a business card No on/off switch Components only on the back of the board All surface mount components Powered by a thin coin cell battery Press button to switch between two images  Component Selection # At my previous job I had messed around with the possibility of using epaper for a front-panel display that would keep information when the power went out. That never went into the product, but I did have some time to mess around with Pervasive Displays ePaper and discovered they have extensive open documentation, software, and hardware at their RePaper website.\nMore specifically, they have examples for the TI Energia Launchpad platform. This platform is great because you can use almost Arduino code with the TI MSP430 line of microcontrollers. I had previously used the TI MSP430G2553 Lauchpad in school to do a variety of tasks. The major advantages of using the MSP430 over an ATmega328 in this project is that the MSP430 has a built-in oscillator, lower price, and has ultra-low power modes.\n   MSP430 low-power modes\nUltra-low power is very important here. In Low-power mode four (LPM4), the MSP430G2553 uses only 0.1 μA (100 nA). With a CR2032 battery that has 220 mAh, that\u0026rsquo;s an estimated battery life of 251 years!\n   Thanks, WolframAlpha\nNow, a CR2032 battery won\u0026rsquo;t actually have a lifespan of 251 years, but it\u0026rsquo;s still pretty good.\nIf you are interested in epaper projects with Arduino, check out Wyolum\u0026rsquo;s BADGEr, it\u0026rsquo;s a very cool conference badge with a 2.71\u0026quot; display, Arduino, and an sd card.\nI also chose the 2\u0026quot; epaper display because a 2.71\u0026quot; display will fit on a business card, but the RePaper example code can\u0026rsquo;t fit two 2.71\u0026quot; images on the MSP430G2553. Also, the 2\u0026quot; display is $15 while the 2.71\u0026quot; is $25.\nThat\u0026rsquo;s all the major component selection. Otherwise it\u0026rsquo;s mostly passives, which I just used cheapest and thinnest 0805 components I could find. There\u0026rsquo;s a bill of materials at the end of this post.\nComponent summary:\n TI MSP430G2553 2\u0026quot; epaper display CR2032 battery  Version 1 # The first version of this design actually had two purposes. First, to do the whole epaper business card thing. Second, to see how fast I could design the board. To start, I looked at the reference circuit for the epaper demo boards.\n   Epaper reference circuit\nThe first step is to decide what I can get rid of. All of the level shifters can go, because the MSP430 and the display are both 3.3v logic. Also, the serial flash and the temperature sensor can both go, along with the voltage regulator.\n   This leaves the circuit at basically nothing, which is just how I want it. All that\u0026rsquo;s left is power control circuitry, the 40-pin connector, and a bunch of capacitors and resistors. The only other circuits are a LED and a pushbutton connected to the MSP430. I\u0026rsquo;m not going to show a screenshot of the schematic at this point, because I had to make some changes later. Although I had most recently used Mentor Graphics Xpedition and EagleCAD for schematic capture and PCB layout, I decided to go with KiCad for this project. KiCad recently released a new stable version and it had been a few years since I had used it at all, so I was excited to see the changes. KiCad version 4 is great, and the OpenGL interactive router is amazing.\n   KiCad 3D preview of version 1\nI ended up putting in two battery holders because I had room. The programming header is rendered as a through-hole pin header, but I wasn\u0026rsquo;t actually going to populate pins. Keep in mind I made this whole board in a few hours around midnight, and checked it the next morning. Looked good enough to me though, so I ordered it!\n   OSH Park is great as always\n   Nice purple and gold boards\n   It works! Well, kinda\u0026hellip;\nThe basic verification worked. I put on an MSP430 and and LED, and I made the LED blink! Not exactly a challenging task, but it\u0026rsquo;s always exciting. My programming header worked too. It\u0026rsquo;s easy enough to program using the MSP430 Launchpad with some jumper wires on the programming pins.\nHowever, I learned my lesson in rushed circuit boards. I got the 40-pin epaper connector totally backwards. I based my pin assignments on the connector, which on the development board has an arrow pointing to pin 40 instead of pin 1. This isn\u0026rsquo;t the only misleading connector on the board, but a few minutes with a multimeter would have saved my first prototype. I also made some silly silkscreen mistakes (two capacitors, one labeled 100nF and one labeled 0.1uF). Also, that 40-pin connector is a huge pain to solder without a microscope. On to version two. Programming # Somehow I ended up with three of the MSP430 Launchpads, so I designed this board to be programmed by just taking the programming headers off one of those. Any Spy-Bi-Wire programmer should work though.\n   The only pins needed are VCC, TEST, RST, and GND. RX and TX are used for serial connection, but I never actually used them. Holding the programming pins in the board works well, but if I was going to be making a bunch of these I would build a Sparkfun-style PogoBed programmer.\nVersion 2 # All I need to do is reverse the 40-pin connector. Easy, right?\n   Welp\nOkay, this took a bit of time to fix. I also spent even more time making it symmetrical.    That\u0026rsquo;s better\nOther than that, I fixed some silk mistakes, moved the programming header, and a bunch more aesthetic changes.    Old on top, new on bottom\nI also found out that TinkerMill - The Longmont Makerspace has a microscope!\n   Covered microscope at Tinkermill\nI\u0026rsquo;m not saying you have to use a microscope to solder on that 40-pin connector, but after using them at work and at school, it\u0026rsquo;s a lot easier for me to.\n   Working!\n   Fully working! Even better, this time everything worked! The demo program from RePaper ran great, and the display switched images just like it should. It also ran off a single CR2032 battery.\nView on Youtube I picked up some cheap generic double-sided tape to use to attach the display, but I\u0026rsquo;m sure there\u0026rsquo;s something better I should be using. Firmware # Now I had to take a closer look at the software. The included RePaper demo.ino code was my starting point. This code loads in two images in the .xbm format, and switches between them every five seconds. I \u0026ldquo;just\u0026rdquo; needed to modify the code to only switch when the button was pressed, and be in low-power mode (LPM4) the rest of the time. Much like the schematic example above, I started by taking out everything I didn\u0026rsquo;t need. This included all the code for the temperature sensor, eeprom, and serial output. Technically you should change the update rate of the epaper display depending on the ambient temperature (to update slower at lower temperatures) and the MSP430G2553 does have a built-in temperature sensor, but I just set it to always be 40° C for the fastest update rate. LMP4 is actually pretty simple in Energia. I originally started using the basic C and setting all the power and interrupt registers, but that\u0026rsquo;s not even necessary. All you really need to do in Energia is:\n Attach the interrupt to a button Put suspend() when you want LPM4 Make an interrupt service routine (ISR) that wakes it up  It\u0026rsquo;s really that simple. My code looks something like this:\nOf course, this took me a few days to figure out. Hopefully someone else doing this will find my post helpful. The complete source code is on my Github.\nWhen I tested the standby current consumption, it came out to 0.1 uA! However, that\u0026rsquo;s the lowest current my meter can even measure.    The other big problem I ran into was when I tried to upgrade displays. The 2\u0026quot; E1200CS021-ND display on digikey is a newer version, so it uses the EPD_V231_G2.h library. When I ran this, I was getting a weird problem where after the image had been displayed, the display would dim. To solve this, I spent a while comparing the libraries.\n   Comparison of displays. Notice how the bottom (new) display looks faded. This was fixed in software, and the new display looks much better when fixed.\nEventually I noticed that the EPD_V110_G1 library (for the older display) included some extra SPI commands to discharge the display at the end.\nI added those commands to EPD_V231_G2.cpp and it worked! I\u0026rsquo;m not sure if this is a problem that all displays will have, being that I only tested it on the single display I have. Also, I think that this dimming problem might only occur at voltages below 3.3V.\nMy modified libraries are on github:\nhttps://github.com/paulschow/epapercard/tree/master/libraries\nView on Youtube\nThe libraries come with one picture of saturn, but I added two more. Gimp can easily convert a 200x96 image to the .xbm format required. In the \u0026ldquo;real\u0026rdquo; business card application I might put resume or portfolio information on the display.\nVersion 3 # Now that the proof of concept was done, I wanted to finish everything up with a final version. Version 3 is basically the same as version 2, but with some changes.\nI changed the battery from a CR2032 (20mm diameter by 3.2mm tall) to a CR2016 (20mm diameter by 1.6mm tall). The CR2016 is the thinnest coin cell battery sold on digikey, which works for me. This does lower the standby battery life.\n   via WolframAlpha\n85.6 years standby battery life is still far over the estimated life of the battery, so I think it\u0026rsquo;ll be fine. I decided to add pads for a tabbed solder-on CR2016, which is even thinner than a CR2016 in a battery holder.\nWhile trying to fix the dimming display problem, I figured out that the epaper displays will only run down to about 2.6 V. CR2016 batteries will die around 2 V, and the MSP430 will run down to 1.8 V. To prevent possible problems with battery voltage, I decided to put in a boost converter. I picked the TLV61225DCKR, which will boost to 3.3 V from as low as 0.7 V. The idea is that the MSP430 will activate the boost converter before changing the image, to make sure the screen always gets 3.3 V.\nThe boost converter is entirely optional, and the TLV61225 has the Vin and Vout pads right next to each other, so if it\u0026rsquo;s not populated it\u0026rsquo;s easy to just connect the screen directly to the battery voltage.\nSince this was the final \u0026ldquo;production\u0026rdquo; run, I wanted to go all out. For the first two versions I ordered my boards from OSH Park, which is great. However, their boards are 1.6mm thick. They also offer a 0.8mm thick run, with a longer wait time.\nSomeone at The Amp Hour Denver meetup had shown me their boards from Elecrow. Elecrow has a variety of board thicknesses and silkscreen colors, exactly what I wanted. I ended up ordering 10 of the 0.6mm thick boards, with black silk on white board.\nElecrow charges per set sizes. A standard business card is 3.5\u0026quot; by 2\u0026quot;, which is 88.9mm by 50.8mm. I ended up taking 0.8mm off the height of the size to fit it in the 100mm by 50mm Elecrow size.\n   Elecrow sent me 15 boards! The price with shipping was $19.24, so that\u0026rsquo;s $1.28 per board. At that price, it\u0026rsquo;s almost practical to hand out the blank boards as \u0026ldquo;normal\u0026rdquo; business cards.\n   I headed back to Tinkermill to solder these up. To no one\u0026rsquo;s surprise, I made another small mistake. I reversed pin 4 and 6 on the boost regulator. Luckily I planned for that and just bypassed the boost regulator completely.\n   Apart from the nonworking boost regulator, everything else worked!\nView on Youtube\nI put the Hackaday jolly wrencher on the card for extra blog cred.\n      The thickest part on there is still the CR2016 battery holder, but using the CR2016 with tabs would make it even thinner.\nA right-angle blue LED makes it so there\u0026rsquo;s a blue light on the surface when the image is being changed, and looks pretty cool.\n      Layout and Schematic # For the complete files, see my Github. I did fix the problem with the boost regulator.\n         Budget # After posting my \u0026quot;$25\u0026quot; Satellite Tracker, I got a lot of (fair) comments that it wasn\u0026rsquo;t really $25, because I didn\u0026rsquo;t include the costs of things I already had.\nFor this, I\u0026rsquo;ll do a real budget breakdown. If you actually wanted to use these as business cards, how much would it actually cost to get a bunch of these made?\nI was surprised that Digikey ran out of the display connectors I used. I picked a replacement but I haven\u0026rsquo;t actually tested it.\nFor the complete BOM check github, but here\u0026rsquo;s the simplified breakdown:\n Passives: $6.18 IC\u0026rsquo;s: $6.23 Connectors: $4.15 Screen: $15.00 PCB: $1.28     I haven\u0026rsquo;t looked at all the bulk pricing on digi-key, so those are the prices for one board, with the PCB from Elecrow. Digikey prices do not include shipping, but they will make you ship UPS/FedEx if you order the batteries through them.\nThat makes the total $31.59 for one card. Let\u0026rsquo;s compare that to some alternatives. FedEx sells a variety of business cards. The cheapest is \u0026ldquo;1-2 Color\u0026rdquo;, $14.99 for 250, around $0.06 per card. The most expensive are \u0026ldquo;Luxury Weight\u0026rdquo;, $44.99 for 250, $0.18 per card. Even the most expensive paper business card costs 0.57% of my epaper business card.\nKeeping the original design intent in mind, let\u0026rsquo;s say you switch jobs so often that you constantly find yourself ordering new business cards. Also, you only buy luxury weight cards. You would have to switch jobs 176 times to break even with one epaper card. I think by the time you got to your 177th job, you might have bigger things to worry about. Are my cards the most impractical? Of course not. Pure Metal Cards makes cards out of gold and other metals. The cheapest stainless steel cards are $600 for 200 (0.3mm), which is $3 per card. Not bad, now you only need to switch jobs 11 times to break even.\nTheir most expensive cards are pure gold, of course.\n   Now we\u0026rsquo;re talking. The cheapest gold business card is $1,200. My epaper card costs just 2.63% of their cheapest gold card, and only 0.96% of their most expensive one! If you\u0026rsquo;re in the market for gold business cards, feel free to contact me instead. FAQ #  How much for a color screen?   Although Pervasive Displays announced three-color screens (black, white, and red), I can\u0026rsquo;t actually find them for sale anywhere. RGB screens don\u0026rsquo;t exist commercially.  How about an Arduino design? How about an SD card?   WyoLum\u0026rsquo;s BADGEr is such a good Arduino design with SD card, if I was going to do that I would just fork it and make it a bit smaller.   Internal timing displays?   Pervasive Displays does make a different line of displays with internal timing controllers, like the E2215CS062. These do have a simpler schematic, and only a 26-pin connector. If I were starting over, I would probably switch to one of those displays.   I want to mess around with epaper, what should I buy?   I haven\u0026rsquo;t tried it, but the PaPiRus Zero is a very cheap epaper hat for the raspberry pi.  Pervasive Displays also has a page of kits on their website.  Bigger displays?   I tried to modify the libraries to make room for the 2.71\u0026quot; display images on the MSP430G2553. I managed to get it down to just 400 bytes too big for the G2553.  It\u0026rsquo;s easy to buy $14 6\u0026quot; displays on AliExpress, but interfacing with them is harder because of poor documentation. Would be cool to get working though.  I want to make my own!   You can order the most recent version of the board from OSH Park, and find the rest of the files on Github. Although I suspect you may want to download KiCad so you can change the name on the front. If you just want a PCB with a blank front, I\u0026rsquo;ve created another project on OSH Park.  You\u0026rsquo;re looking for work?   Not anymore, thanks!  I\u0026rsquo;m rich and want to buy 10,000 of these.   (I\u0026rsquo;ll be honest, this isn\u0026rsquo;t a frequently asked question.)  Please contact me! Or just make your own, this is open source hardware and software. It would be cool if you let me know though.   Comments: # Nice work, and a great reference! # Unknown - Aug 4, 2016\nNice work, and a great reference!\n#### Very nice design. Has me wondering if it could be ... [Galane](https://www.blogger.com/profile/08348363368939269094 \"noreply@blogger.com\") - Aug 2, 2016 Very nice design. Has me wondering if it could be made thinner by using vias to put the display connector on the front side and cut a hole through the board to set the battery into, with a strip of metal across the front for one of the power contacts. Since it\u0026rsquo;d have to be two sided to put the display connector on the front, may as well use the front copper for other things such as a power connection and an LED.\n#### hmm, there's gotta be a way to market this. ma... [Jamie L. Bartlett](https://www.blogger.com/profile/01072260479548031566 \"noreply@blogger.com\") - Aug 2, 2016 hmm, there\u0026rsquo;s gotta be a way to market this. maybe a kit?\n#### I was looking into the battery strip style. This E... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - Aug 3, 2016 I was looking into the battery strip style. This EKG business card does it very well http://mobilecg.hu/blog.html\n","date":"17 August 2016","permalink":"/2016/08/epaper-business-card.html","section":"Posts","summary":"Recently, after graduating with a EE degree from the University of Colorado Colorado Springs and working at X-IO for a few months, I found myself out of a job.","title":"Epaper Business Card"},{"content":"After building my QFH antenna, I became more interested in satellite communications. The QFH antenna works great for circularly polarized signals like weather satellites, but something like a yagi or log-periodic antenna is better for most sats, because it can be pointed directly at the sat.\nAfter a short break where I interned at Keysight Technologies then finished my last semester at school, I built a tape measure yagi for 145.8 MHz to receive ISS SSTV broadcasts. It works great for that, but after a few passes I started to wonder if there was a better way. Ideally, some way to track the sat with a computer, automatically. Commercial solutions exist of course, like the Yaesu G-5500. This is a bit expensive for my tastes, and meant for more permanent installations. SatNOGS is a great open-source solution, if you have access to a 3D printer and some parts. I still want to build the SatNOGS rotor, but first I wanted to see if I could build my own version cheaper.\n* I\u0026rsquo;ll tell you straight away that my solution ended up costing more than $25, but I think someone could make the same thing for $25.\nHardware # As with most projects these days, I started out by shopping around for parts. Eventually, I found a $25 pan and tilt solution, meant for mounting cameras from drones.\n   It seemed to me that if I could make the antenna light enough, I should be able to use something like this to point it wherever I want. I ordered one of these, and also some okay servos ($7.21) with metal mounting brackets ($3.74) in case I wanted to completely make my own solution.\nNaturally, the servos and brackets shipped about a week earlier than the $25 pan and tilt kit. I couldn\u0026rsquo;t be bothered to wait, so I got right to trying to make it all fit together.\n   Using a bunch of masking tape and an arduino, I began to test if these servos could even support a pvc tape measure antenna.\n   The answer: kinda. The azimuth control works fine, but the elevation struggles a lot. The PVC elbows add more weight than you would think, and make it hard to balance. The antenna has to be made of something lighter than PVC (measuring tape is still light enough).\nLarge antistatic tubes used to ship high-speed connectors in work well for this. They\u0026rsquo;re long enough, and very lightweight while still being rigid. If I was doing it again though, I would probably just use a cheap yardstick.\n   The servos have no problems moving an antistatic tube around.\n   It is a bit harder to attach the measuring tape to a square tube than it is to a pvc elbow. I used very cheap electrical tape for testing, but later actually used screws.\n   However, after finishing this I took a step back and decided to work on the software more. It\u0026rsquo;s a bit of a pain to have this huge antenna flailing around when your code has a bug in it.\nThe arduino servo library is simple enough, and worked well for my servos. I did find that the writeMicroseconds() function worked better for me than the write() function. I made a simple script to control the two servos over the serial terminal: servo_serial.ino.\nNormally, servos don\u0026rsquo;t give actual feedback of their position. If you use the read() function, it just returns the last value that was written to the servo. This can be useful in some cases, but I decided I wanted to have actual feedback. The servo uses a potentiometer internally to determine the position, and it\u0026rsquo;s a simple matter to attach another wire to the center terminal and read the current value using the analog input on the arduino. Credit to jes1510 on trossenrobotics.com for the complete tutorial.\nI cut some wires from broken computer fans and got to work.\n      Now I just hooked the sense wire up to an analog pin on the arduino and read the values. I found my servos typically read between 80 and 445.\nI determined an arrangement for the servos that I thought would be able to track the most satellites (more on this later): azimuth on bottom with elevation on top.\n   Yes, the tape on the bottom of the vice is really necessary.\nSoftware # Computer Side # Now for the actual satellite tracking. For this, I looked to SatNOGS, which also uses an arduino. Their code interprets serial commands sent using the Easycomm2 protocol, and translates them to stepper or dc motor movements. The key here is the Hamlib library for linux. This library includes commands which take output from other programs and use them to control antennas or radios. My favorite satellite tracking program on linux is Gpredict, which works great with Hamlib.\nSatNOGS uses the Easycomm2 serial protocol, which Hamlib supports. Then the commands are just sent through the serial port on the arduino and interpreted there.\nIt\u0026rsquo;s easy to set up Gpredict with Hamlib, once you understand what\u0026rsquo;s going on.\nFirst, set up a new rotator interface in Gpredict.    Name can be whatever you want, I chose \u0026ldquo;easycomm2\u0026rdquo;. Host is \u0026ldquo;localhost\u0026rdquo; unless you are doing this over a network. Port is \u0026ldquo;4533\u0026rdquo; by default, but you can change it.\nThen, just set up Hamlib to interpret the command.    The command for this is \u0026ldquo;rotctld\u0026rdquo; (Hamlib TCP rotator control daemon). Choose the Easycomm2 mode with \u0026ldquo;-m 202\u0026rdquo;. The serial baud rate is \u0026ldquo;-s 19200\u0026rdquo;, and the serial port for me is \u0026ldquo;-r /dev/ttyUSB0\u0026rdquo;. The full command is \u0026ldquo;rotctld -m 202 -s 19200 -r /dev/ttyUSB0\u0026rdquo;. There won\u0026rsquo;t be any output afterwards unless there is an error.\nNext, go to Gpredict and open up the antenna control module.\n   You will get an antenna control panel.\n   From here you can click \u0026ldquo;engage\u0026rdquo; to activate the interface we set up earlier, and then control the antenna any way you want! Select a satellite and then click \u0026ldquo;track\u0026rdquo; to track it. Firmware Side # Setting up the computer software is the easy part. Luckily people have done a lot of work on this before me, to make it as simple as it is. However, that\u0026rsquo;s pointless if the hardware doesn\u0026rsquo;t know how to interpret the commands. The SatNOGS program will interpret the commands correctly and output them so I can use them, but I still wanted to know what was actually being sent. This proved to be more difficult than I first imagined. I couldn\u0026rsquo;t just open up the serial monitor on the arduino IDE, because the serial port was already in use. I played around with a bunch of linux serial sniffers and bridges, but couldn\u0026rsquo;t find one that was extremely simple to set up. Eventually I found the best solution for me was to use a Bus Pirate set to UART monitor.    Now that I could see what the Easycomm2 mode was actually putting out, I could better understand it. In my screenshot, I was setting the azimuth to 180 and elevation to 45. Pretty simple.\nThe SatNOGS stepper_motor_controller.ino already interprets Easycomm2 commands and then translates them into stepper motor controls. The key is the cmd_proc function, which eventually feeds the angles into the deg2step function to calculate the number of steps from degrees, and then feeds that into the stepper_move function. Since the servos don\u0026rsquo;t need step calculation, I just cut that out and made my own servo_move function. Along with a few other minor changes, I now had the working Servo_easycomm.ino! At this point it worked! However, I quickly discovered a major problem in my approach, The servos I have only move 180 degrees.\n   By Vloeck (Own work) [GFDL (http://www.gnu.org/copyleft/fdl.html) or CC-BY-SA-3.0 (http://creativecommons.org/licenses/by-sa/3.0/)], via Wikimedia Commons\nAs I figured out, there are 360 degrees in a circle. This means that my tracker can only track a satellite moving through two quadrants of the compass. For the most part it\u0026rsquo;s not a big deal, just a small inconvenience. Most satellites only move through two quadrants, and a most of those only move through 2 and 3 or 1 and 4.\n   The solution is to create 4 different programs. One that sets 90 degrees as North and covers from W to E, one that sets 90 degrees to East and covers from North to South, etc. Then, every time I want to track a satellite I just have to load on the correct program and position the tracker so that at 90 degrees it\u0026rsquo;s pointing in the correct direction. Of course, Gpredict doesn\u0026rsquo;t know that there are 4 separate programs. To accommodate this I used the map() function of arduino heavily. This function takes a variable from one range of numbers to another, perfect for what I\u0026rsquo;m doing. For example, the program for North, Servo_easycomm_N.ino, has to take inputs from 270 degrees to 90 degrees, and turn them into 0 to 180 degrees for the servo. \u0026lt;![CDATA[ void servo_move(int stepAz, int stepEl){ int xmape; int xmapr; // map the range of angles to the servo xmape = map(stepEl, 0, 90, 1425, 2400); elservo.writeMicroseconds(xmape); // translate azimuth angles // make 0 degrees pointing north //Serial.println(stepAz); if ((stepAz \u0026gt;= 270) \u0026amp;\u0026amp; (stepAz \u0026lt;= 359)){ //quadrant 2 xmapr = map(stepAz, 270, 359, 2300, 1400); roservo.writeMicroseconds(xmapr); } else if((stepAz \u0026gt;= 0) \u0026amp;\u0026amp; (stepAz \u0026lt;= 90)){ // quadrant 1 xmapr = map(stepAz, 0, 90, 1400, 500); roservo.writeMicroseconds(xmapr); } } ]]\u0026gt;\nOnce I figured that out, it was pretty easy. The steps to actually tracking a satellite:\n Open Gpredict and figure out which quadrants the satellite is going through Load the correct program into the arduino. Wait for the program upload to complete. Point the antenna in the correct direction. Run \u0026ldquo;rotctld -m 202 -s 19200 -r /dev/ttyUSB0\u0026rdquo; Open the antenna control in Gpredict. Engage the interface. Select the satellite. Click \u0026ldquo;Track\u0026rdquo;  See, simple!\nAt this point it can actually track satellites:\nFrom a vice on my floor. Not very useful.\nI also implemented the analog feedback into the SatNOGS code. SatNOGS steppers use \u0026ldquo;step2deg(ELstepper.currentPosition())\u0026rdquo; to get the current position of their motors in degrees and then print it out where necessary in the code. Gpredict than reads those values and displays the current location of the antenna as a crosshair on the compass.\nI just made my own functions to return the elevation or azimuth degrees based on their current analog reading, and then put that in place of the stepper code.\n\u0026lt;![CDATA[ int degel(){ int position; int degree; // elevation feedback position = analogRead(elfeedbackPin); // my servo reads 264 at 90 degrees // which is 0 degrees of elevation degree = map(position, 264, 425, 90, 0); return degree; } ]]\u0026gt;\nNow Gpredict shows where my antenna is actually pointing!\n   The other half of the equation is the radio. I used the ever-popular (~$15) RTL-SDR with GQRX as the software. As a satellite moves towards and away from you the frequency changes slightly due to the doppler effect. Luckily, Gpredict can easily interface with GQRX to control the tuning frequency. Gpredict also comes with most satellite frequencies built-in.\nHardware Again # As I was writing the first part of this post, the pan and tilt setup arrived.\n   Even though I\u0026rsquo;m pretty sure my setup would have worked, the hardware for the pan and tilt was way better than anything I could have built. The servos are exactly the same, so I switched my modified servos in for the included ones and started using that setup instead. This also required some code tweaking and the elevation control was reversed, but that\u0026rsquo;s easy.\nNext I started to consider how I wanted to mount the whole setup to a tripod. The easiest way I could think of was to buy some nuts and epoxy one of them to the side of the azimuth servo. The standard tripod mount is 1/40-20, which can be found at any hardware store in the US.\n      There\u0026rsquo;s probably a better way to do this, but it worked well enough. I also drilled a hole in the bracket for the extra pin on the tripod mount, to keep it level.\n   (shown undrilled in this photo)\n   Going through my junk, I found a circular bubble level which is very helpful when you want to know if something is well\u0026hellip; level.\n   After that it was time to figure out a battery solution. For a couple of days I tried to get one of those external usb power packs working, but it would always shut itself off eventually. I gave up on that for now and bought some AA battery holders. Four AA batteries is more than enough for these servos. In the future I might try a setup with 18650 batteries instead.\n   I verified that the 4 AA setup actually works, and then got to wiring everything together. My plan was to cut off all the connectors and replace the servo ones with standard computer power supply connectors, which I have a ton of.\n   This worked pretty well, and I even used some fan connectors for the arduino and battery connections.\n   I also covered most of the wiring in wire loom to hide the mess. Then it was time for more zip ties! Simply zip tie everything to a tripod!\n   RTL-SDR in altoids tin, with radioshack FM radio filter.\n   Now the setup is complete and basically portable. Time for field testing.\nField Test # After waiting for the lightning and rain to stop, I picked a satellite that I knew was always transmitting (NOAA 18) and drove to an empty parking lot to test it out.\n         It worked! Unfortunately I didn\u0026rsquo;t have GQRX set up correctly, so I didn\u0026rsquo;t get an actual image from the pass, but it tracked almost perfectly.\nHere\u0026rsquo;s a video I took of it, sped up 40 times:\nOne problem I had was the Gpredict rotator control was only set to update when the antenna was 5 degrees off, so it didn\u0026rsquo;t update as often as I would have liked. Later, I set it to 1 degree. The wind also messes with the tape measure elements pretty badly, but I don\u0026rsquo;t think it was that big of a problem.\nI tracked some of the XW-2 satellites after that, and they all showed up as well.\n   So, is it useful at all? Probably not. It is cool and I learned a lot, but actually driving somewhere, setting it up correctly (which involves reprogramming the arduino for every satellite), and then sitting around is pretty much the opposite of useful.\nMost people want satellite trackers so that they can put them outside and then control the antenna from inside, which someone probably can\u0026rsquo;t do with mine unless they live in a really nice place (or build a radome). However, it could be useful for a small number of people who have covered balconies or porches. It wouldn\u0026rsquo;t receive the full effect of the weather and they wouldn\u0026rsquo;t be able to get more than 180 degrees from a balcony anyways.\n Also, if you try to transmit the interference will kill the servos while you\u0026rsquo;re transmitting, so it\u0026rsquo;s useless for that (although that could probably be fixed).\nNot counting things I already had (SDR, tripod, arduino, etc), the total comes for me came to around $60, which is almost $25, right? Really though, I think if someone wanted to build this project they could do it for around $25. Just buy the pre-made pan and tilt and zip tie an antenna to it.\nWhere will this project go next? I\u0026rsquo;m going to try to modify the azimuth servo to be full-rotation. I\u0026rsquo;m also planning on building another antenna for the 435 MHz region. Or maybe I\u0026rsquo;ll bin the whole thing and build a SatNOGS rotator.\nComplete source code # Comments: # Hi, I\u0026rsquo;m Eleftherios from the SatNOGS team, we \u0026hellip; # elkos - May 4, 2016\nHi, I\u0026rsquo;m Eleftherios from the SatNOGS team, we are glad you found our code useful and we are looking forward to join our community and see more stuff from you. :)\n#### Hi, nice project. A compass module (+gyro) could b... [satman](https://www.blogger.com/profile/01419290676631576689 \"noreply@blogger.com\") - May 4, 2016 Hi, nice project. A compass module (+gyro) could be an option instead for measuring the full rotation instead of a rotary encoder. Have you experienced any electromagnetic-noise because of your servos etc.? The good old aluminium foil could do a good option for shielding the servo otherewise. If your antenna has an azimut of 180 degree you could just tilt it over to the other side, that could solve your problem, but you would probably have a short signal loss.\nHow powerfull is the servo setup? Could it handle a 0.5 kg antenna?\nCongrats on that nice project.\n#### Hice job, congrats ! Exactly what I\\`m looking for,... [Vic YO4TNV](https://www.blogger.com/profile/09495312386868679551 \"noreply@blogger.com\") - May 5, 2016 Hice job, congrats ! Exactly what I`m looking for, linux, gpredict and arduino i will try to build it too . 73 de YO4TNV !\n#### Thanks! I did think of using a compass, but not t... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - May 1, 2016 Thanks!\nI did think of using a compass, but not to detect the rotation. I\u0026rsquo;ll have to look into that!\nit doesn\u0026rsquo;t seem like noise is a problem, but shielding would probably be a good idea anyways.\nI\u0026rsquo;m not sure exactly how much weight they can handle. I think balance is a big part of that too.\n#### Great Article with components that can be acquired... [Chief Cook and Bottle Washer](https://www.blogger.com/profile/18311227368721846511 \"noreply@blogger.com\") - Jun 6, 2016 Great Article with components that can be acquired in more remote areas of the world.\nThat said, I can\u0026rsquo;t see any images as your host, Blogspot, is blocked by many authoritarian governments as former countrymen use it as a platform for political protest.\nSo it\u0026rsquo;s off to Cambodia where almost everything is uncensored.\n#### Hi again Today I came across this motor: http://ww... [satman](https://www.blogger.com/profile/01419290676631576689 \"noreply@blogger.com\") - Jun 2, 2016 Hi again\nToday I came across this motor: http://www.dx.com/p/40rpm-12v-encoder-motor-dc-turbo-worm-gear-motor-w-self-lock-434055?TC=USD\u0026en20160526newarrivals#.V1b7eb7oSzk\nI belive it could just fit your needs.\n#### Can you track the signal strength, that is given y... [PhilCobbin](https://www.blogger.com/profile/00752686085586715309 \"noreply@blogger.com\") - Aug 1, 2016 Can you track the signal strength, that is given you rotate about the satellite\u0026rsquo;s location can you measure the signal strength as a function of the tilt settings?\n#### I haven't experimented with that at all, but i... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - Aug 1, 2016 I haven\u0026rsquo;t experimented with that at all, but it would probably be possible. Most of the drone antenna trackers (FPV) use a similar system.\n#### Nice work :-) I actually did something similar t... [thazlett](https://www.blogger.com/profile/18187536925372319389 \"noreply@blogger.com\") - Sep 1, 2016 Nice work :-)\nI actually did something similar to this 3 years ago. I used the same pan tilt servo kit you appear to have used. As for code I only got as far as controlling the servos from the serial console (using WASD for control). After that I had other things going on and the project took a back seat. I have lost some of it now which is a shame.\nHere are videos of my old rig which is now probably in my boxes of junk. I was testing the limits of those servos I think:\nhttps://www.youtube.com/watch?v=OotKcJFz7SQ\nhttps://www.youtube.com/watch?v=8Miy1syfaPk\nI have recently been looking to pick it up again. What you have done here is exactly what I was aiming to do 3 years ago. I\u0026rsquo;m happy to see I wasn\u0026rsquo;t the only one who attempted it. 3 years ago I remember finding information on it quite difficult. I knew little about servos and it was also the first time I used an arduino. So it was a huge learning curve for me also. I also ran into that same issue with the panning servo.\nThis has sparked my interest once again :-)\n","date":"12 May 2016","permalink":"/2016/05/25-satellite-tracker.html","section":"Posts","summary":"After building my QFH antenna, I became more interested in satellite communications.","title":"$25 Satellite Tracker"},{"content":"There is an incredibly popular low-cost software defined radio, known as the RTL-SDR. I\u0026rsquo;ve had one of these for months, and haven\u0026rsquo;t really done anything cool with it. Recently I\u0026rsquo;ve seen a lot of people on the rtl-sdr reddit building quadrifilar helix (QFH) antennas to receive images from satellites using automatic picture transmission (APT). I decided to try this over spring break.\nStep one is research. This is a pretty old ham radio project and now a lot of people are redoing it with the RTL-SDR, so there is a lot of information out there. I probably used this blog post the most, because it has links to a ton of other helpful posts.\nStep two is buying materials. I bought 1\u0026quot; and 0.75\u0026quot; PVC, but if I was going to do this again I would probably buy 1.5\u0026quot; and 0.5\u0026quot;. I already had copper pipe from a very old project to use for this antenna.\nThen generate the template using this website. The default values for 137.5 MHz are good. Put the diameter of the conductor, which was 5mm for me. Then just scroll down and insert the two PVC diameters in mm. I measured 1\u0026quot; as 35mm and 0.75\u0026quot; as 25mm (although I know 1 inch is 25mm when converted directly) using a tape measured that had cm on it, but your pipe may be different. Download the template and print it out, but make sure the printer doesn\u0026rsquo;t scale it. Compare the printed size to your PVC to check.\n   Cut out the template, tape it to your pipe, and get drilling. I had a cm measuring tape, but you might have to convert the measurements to inches if you don\u0026rsquo;t. A useful tip from here is to use a door jamb to make a line down the pipe.\n   The copper pipe that I used is easy* enough to bend, but some guides say to use a log to bend the pipe if you can\u0026rsquo;t. Follow the template exactly, with pipe from hole A going to A, and D to D, etc. You should be aware that the larger loop from the template is holes B and D, which makes the smaller loop holes A and C.\n*This pipe might have been too easy to bend. I had a serious kink on the bottom loop.\n   Later I tried to fix it with solder, but I don\u0026rsquo;t really think that did the job.\n   Eventually you should have something that looks weird from any direction but is generally symmetrical. Time to attach the coax.\nI went through my pile of coax and picked the highest-quality, stiffest coax. This is probably overkill. Then you drill a hole near the top, feed to coax in, and solder it on. I was very confused about which wires go to which loop until I found this post, which has a nice graphic.\n   My soldering solution was an old iron set to max temp with a huge tip, and a ton of solder. Cut down the top of the pipe if you can\u0026rsquo;t reach in enough. The real tip here is to sand the copper before you solder it. Sand even if you are just using copper wire.\n   Wrap the cable tightly around the main tube a few times to create a balun. I used five times.\n   It\u0026rsquo;s something!\nLater I used a piece of particle board to create a simple stand for it, but don\u0026rsquo;t have any pictures. If you have any experience with wood you can probably build one better than mine.    My RTL-SDR (in the altoids can in the picture) already has an F connector, so I just plugged it in. Then I used a usb extension cable to provide distance from the antenna. Then I waited for satellites.\nTo receive the images I referenced this post and used SDR#, VB-Cable and WXtoImg on Windows. It should be possible using Gqrx on Linux, but I\u0026rsquo;m sure how to pipe audio from one program to another.\nOnce I had that set up I used the WXtoImg satellite pass tracker and n2yo to track NOAA 15, 18, and 19, and found that the next pass was NOAA 15 at 6am.\n   The next morning, I went out and set up and got an image! It was pretty overcast at the time, but it still worked.\n   NOAA 15 Passing over Idaho\n   Sorry for the low contrast, but the signal is there!\n   Receiving picture\nAfter it passed I let WXtoImg decode it and got something.\n   Not exactly the highest quality, but it\u0026rsquo;s there!\nA few more satellites passed over that day, and I grabbed them.\n   NOAA 19\n   NOAA 15\n   NOAA 18\nNOAA 18 and 19 had strange interference in their frequency, so the pictures really suffered. However, the idea worked.\nNext morning NOAA 15 was flying almost directly over me, so I went out at 6am again to get a really nice picture.\n   This time I was even able to do color!\nLater that night I tried to record the Russian Meteor-M N2, but the signal wasn\u0026rsquo;t strong enough.\nI still wasn\u0026rsquo;t satisfied, and identified some problems in the original antenna that could be improved on. Then I went to go build another antenna.\nCopper pipe turned out to be pretty hard for me to work with, so I switched to 12 gauge copper wiring instead. I also used the center supporting pipes this time, and triple-checked every measurement on the antenna.\nThe new antenna doesn\u0026rsquo;t look as cool because there isn\u0026rsquo;t any copper showing, but it works great!\n      I used it to get this picture from NOAA 18, which didn\u0026rsquo;t even fly that close to me.\n   The only weird thing is that band in the middle, which I think was caused by me doing something on the computer at the wrong time.\n   I found the best setup for me is WFM mode with a 40k bandwidth. I\u0026rsquo;m not sure how much sample rate matters, I\u0026rsquo;ve gotten images 2.8MSPS sample rate and 0.25MSPS sample rate.\nWith this new setup, I\u0026rsquo;ve gotten some great images.\n   Notice how my location isn\u0026rsquo;t even in the picture!\n         \u0026mdash;\nComments: # Great work! I have a question about the new antenn\u0026hellip; # Unknown - Aug 0, 2016\nGreat work! I have a question about the new antenna you built specifically the bottom part. Are the 12 gauge copper wires soldered together? Is it one piece?\n#### It's two long wires, soldered together at the ... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - Aug 1, 2016 It\u0026rsquo;s two long wires, soldered together at the top. At the bottom they just run straight through.\n","date":"25 March 2015","permalink":"/2015/03/qfh-antenna-for-receiving-satellite.html","section":"Posts","summary":"There is an incredibly popular low-cost software defined radio, known as the RTL-SDR.","title":"QFH Antenna for Receiving Satellite Images Using RTL-SDR"},{"content":"Just in time for Halloween, I modified my previous Raspberry Pi Internet LED Control project to control an RGB LED, and stuck it inside a fake pumpkin. Now I have an internet controlled RGB pumpkin!\nThe code is basically the same as the old Raspberry Pi Internet LED Control, but instead of using four links to turn four LEDs on or off, it uses a form to control the levels of the three legs of the RGB LED.\nI used a common anode diffused RGB LED for this, which I received from the Sparkfun dumpster dive a few months ago.\nI wired it up to the extra pins on the Rpi V2, BCM numbers 28, 29, and 30. The resistors are each 100 Ohm. Some wiring guides for RGB LEDs have a 180 Ohm for the red, and 100 for blue and green. I used what I had, which was 100. It works fine for me.\n   After trying out a few test programs, I was ready to make it interface with the web. At first, I started with my old code and was modifying it to take any url operator (?color=ff00ff), but then I found the WebPy form library. This is a much more elegant solution, although an even better one would use something like Ajax to enable live updates.\n   At first, I had it so that 100 was full off and 0 was full on. I later changed this to be compatible with color pickers that give RGB values from off at 0 to full on at 255.\n   Here\u0026rsquo;s a video of the initial test:\nThe color of the LED is pretty hard to pick out, because it needs a diffuser. A popular thing to use is a ping pong ball with a hole in it. Instead, I used a fake pumpkin.\n   This pumpkin used to have an incandescent lightbulb in the back. I took that out and just placed the LED inside.\n   This works very well. The inside of the pumpkin is matte white, so it shows the correct color.\n   Here\u0026rsquo;s a video of the final product:\nI\u0026rsquo;m pretty happy with it. The plan is to put it on a table for a Halloween party and give out the address, which should prove entertaining for five minutes.\nSource Code at Github\nUpdate: # I added phant.py from python-phant to this, so now it outputs to data.sparkfun.com.\n   Data stream here\n I also adapted their tutorial on using google charts to make a html file with a graph of the values.\n  You can view the graph using RawGit here. # Comments: # Heh, just needs some animatronics to move the \u0026amp;quo\u0026hellip; # conundrum - Oct 0, 2014\nHeh, just needs some animatronics to move the \u0026ldquo;beam\u0026rdquo; around inside.\n","date":"24 October 2014","permalink":"/2014/10/rgb-internet-pumpkin.html","section":"Posts","summary":"Just in time for Halloween, I modified my previous Raspberry Pi Internet LED Control project to control an RGB LED, and stuck it inside a fake pumpkin.","title":"RGB Internet Pumpkin"},{"content":"The problem with old computers is trying to find a use for them after you have upgraded. I found myself owning four different laptops. Along with my tablet, phone, and desktop, I didn\u0026rsquo;t have use for so many laptops.\nInitial Hardware # One of these was given to me for free by Google in 2010. A CR-48 chromebook. It served me well in high school and the first year of college. However, they have a hinge problem. Mine was being held together by three machine screws through a hinge.\n   CR48 with hinge repair in upper right\nAlthough I had Ubuntu 13.10 installed and working, I still almost never used this laptop. When I got a newer chromebook, I decided I had to do something with the old one, so I did. My plan was simple: remove the hinges completely and turn the screen around, then hang it on the wall to use as a digital picture frame. Even though digital picture frames seem very 2005, my roommates liked the idea enough that I decided to go through with it.\n   Hinge screws removed\nThe CR48 is actually fairly easy to disassemble. There is a great guide on the CR48 wiki. Once I had it open I removed the hinges and unplugged the fan.    Fan disconnected\n   Hinge removal\nThen it was a simple matter of turning the screen the other way.\n   Screen turned around\n I needed some way to tape the screen to the back of the laptop, so I gathered up my adhesive supplies.\n   Different types of tape\nLuckily I discovered some velcro strips! These were exactly what I was looking for.\n   Velcro applied to one side\n   Velcro on both sides\nNow I had to figure out a way to hang this whole assembly on the wall. I looked through my dollar store picture hanging kit and pulled out some picture hanging wire. Then I tied it through the speaker holes on either side of the CR48.\n   Sorry Google hardware designers\n   It hangs!\nWhen I tried to turn it on I discovered a problem. The computer goes to sleep when the lid is in hanging configuration because of a magnet in the lid. So I pulled the magnet out.\n   Lid magnet\n   No more lid magnet\n   Now it works! Software # I knew the whole time that I wanted anyone to be able to add pictures. The easiest way to do this was by email. For awhile I figured I would set up some sort of POP3 email server with a script to put them on the laptop, but it\u0026rsquo;s even easier than that. I used Dropbox and Send to Dropbox to give my Dropbox account a special folder with its own email. Then I installed Dropbox on the picture frame and used selective sync to only sync the special folder.\n   Dropbox selective sync\nSend to Dropbox is a nice free service, but it gives an ugly email. Instead of using that, I set up another gmail account for my domain and forwarded all the email to Send to Dropbox. Then I tested this out with a few pictures.\n   Email sending works!\nNext, I had to pick out a slideshow program. I had several requirements for it:\n Fullscreen all pictures Animated gif support Random slideshow order  After looking through the Ubuntu software center and trying about 10 programs, I was ready to give up. However, I discovered a plugin package for the default image viewer, Eye of Gnome (eog). Eog can already fullscreen all pictures and play animated gifs, but it lacks random slideshow order. The package eog-plugins gives it random slideshow order.    Setting the slideshow duration to 100 seconds\nNow pictures are sent to the email, added to Dropbox, and put in the random slideshow to be shown eventually. Final Hardware # In this state, I hung the picture frame up on a wall in my living room for about three weeks.    On the wall (ignore the ethernet cables)\nI put the email address up on Facebook and on a note next to the frame. It worked and I quickly reached over 200 pictures in the slideshow! I was not done yet. Now I went back to the dollar store and picked up a picture frame and some black construction paper to make it look a little better.    Fancied up\n   Another angle\nOne of the best features is animated gif support. I created a gif of a gif on the picture frame to show this.\n   Here\u0026rsquo;s a youtube video of the same thing\nTo put the frame to sleep, I simply put a large hard drive magnet next to the right side of the frame and leave it there. To shut it down, I ssh in and turn it off.\n","date":"16 March 2014","permalink":"/2014/03/digital-picture-frame.html","section":"Posts","summary":"The problem with old computers is trying to find a use for them after you have upgraded.","title":"Digital Picture Frame with Animated Gifs"},{"content":"Recently I heard about the Cloud b Twilight Constellation Night Light, which is a stuffed turtle that projects stars from it\u0026rsquo;s shell. I considered ordering one, but first I searched for a cheaper star projector.\nThe cheapest one by far is Astrostar Astro Star Laser Projector Cosmos Light Lamp, at just $15. The pictures look amazing. However, the reviews are something else.\n      After reading most of the reviews, I began to see the problem. No where in the Amazon description does it say that this is a kit, and the pictures only show it fully assembled. A few good reviews indicated that it is actually a good kit for people who want that sort of thing. I turned to eBay and picked up the same kit for around $7 shipped from the US. \n   The box for the kit\n   Unassembled parts inside the box\n   English instructions\nThe instructions seemed fairly straightforward. First, I assembled the bulb holder.    Bulb holder half assembled\n   Bulb holder assembled\n   Bulb holder with stickers\nI managed to cut my finger on my scissors while cutting the sticker, but otherwise I had no problems. Next came the switch and battery assembly. The instructions depict a different type of switch, but this one was easy to install.\n   Switch installed\n   Top of the switch\n   Battery terminals in place\n   It works!\nThere is another plastic bit that goes across the batteries to hold them in place. I didn\u0026rsquo;t have any problems with this part. Next was the starfield \u0026lsquo;dome\u0026rsquo; assembly. This part actually required skill, and seemed the easiest to mess up.    One piece of the dome\n   Removing the protective film\n   Adding double-sided tape\n   Mostly assembled, missing the top bit\n   The inside of the dome\n   Dome mostly complete, time to add the bottom\n   Bottom in place\nThe dome was not that hard to assemble. The letters on each side piece match up to each other. Mine isn\u0026rsquo;t perfectly aligned and has a few holes but it is hardly noticeable.    A quick test\nIt isn\u0026rsquo;t really necessary to cut the excess tabs from the dome, but it looks better.\n   Tabs shortened. I took it into the darkest room in my apartment (the bathroom) and used my real camera to take some pictures.    ISO 800 picture, what it looks like to my eyes\n   ISO 800\n   ISO 400\n   ISO 1600, much brighter than real life\n   It also works in my bedroom at night (ISO 800)\nOverall, it\u0026rsquo;s a pretty good kit. It took me about half an hour to assemble. I bought it for $7 it\u0026rsquo;s worth that much at least. If you are decent at assembling kits, this is fun to build and the end product is pretty amazing. If you aren\u0026rsquo;t good at assembling kits, there are many commercial personal star projectors out there for you. The biggest flaw is that most of the \u0026lsquo;stars\u0026rsquo; are pretty blurry on the walls, so actually picking out constellations or specific stars is hard to impossible. # Comments: # Hey paul, i just ordered this and am a little conf\u0026hellip; # Emily - Dec 2, 2014\nHey paul, i just ordered this and am a little confused about the wiring. The first set of wires i attached to the battery pack like instructed, but i\u0026rsquo;m not sure where to put the wires attached to the light out of the bottom of the bulb holder. Please help!\n#### Hi Emily. The wiring for the bulb and the battery ... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - Dec 4, 2014 Hi Emily. The wiring for the bulb and the battery pack both go to the switch. Red goes on one side, and black goes on the other.\n#### I have a question as well,what bulb did you use? L... [JDeCandia](https://www.blogger.com/profile/09404027166430416174 \"noreply@blogger.com\") - Sep 1, 2015 I have a question as well,what bulb did you use? Looking at the reviews, it seems it comes out a bit dark. Did you find a way to remedy this?\n#### I just used the bulb that came with it. It still i... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - Oct 4, 2015 I just used the bulb that came with it. It still is a bit dark, but putting it in a dark room and letting your eyes adjust makes it pretty nice.\n#### I truly appreciate it! Thank you! [Unknown](https://www.blogger.com/profile/00246724426856363443 \"noreply@blogger.com\") - Oct 5, 2015 I truly appreciate it! Thank you!\n#### You have put the tabs the wrong way. My one fits i... [Unknown](https://www.blogger.com/profile/06595246344906594354 \"noreply@blogger.com\") - Oct 5, 2016 You have put the tabs the wrong way. My one fits internally and it is much much easier\n","date":"13 February 2014","permalink":"/2014/02/astrostar-astro-star-projector-kit-build.html","section":"Posts","summary":"Recently I heard about the Cloud b Twilight Constellation Night Light, which is a stuffed turtle that projects stars from it\u0026rsquo;s shell.","title":"Astro Star Projector Kit Build"},{"content":"While I was home for winter vacation, I quickly grew bored without access to my electronic tools and projects. To entertain myself, I took some speakers, and amplifier, and an empty tool case and combined them all into a boombox.    One cheap speaker\n   One cheap tweeter\nI\u0026rsquo;ve had this set of Pyle speakers lying around since I had a car. It\u0026rsquo;s two woofers, two tweeters, and two filters. The whole set cost something like $30.    One cheap amplifier\nThe amplifier is an ebay special \u0026ldquo;Hi-Fi Stereo Amplifier\u0026rdquo; This also came from my car. it\u0026rsquo;s got volume, bass, and treble adjustment, along with two inputs. These cost about $10, and no one will bother to steal this from your unlocked car. They come with some kind of annoying color-changing LED in the front, but I changed it to an amber LED the first day I had it.    One empty hard tool case\n   Inside the tool case\nI picked up the Dewalt tool case at a thrift store a few years ago. It probably used to hold a scroll saw, but I never found a use for it.    Measuring the template\n   Hole cut for speaker\n   Making it fit\nFirst, I made a cardboard template for the speaker using an old shoebox. I probably could have downloaded a template online, but this was simple enough.    Marking the location\n   Dremel and hole cutting tool\n   Hole cut\nTo cut the holes I used a Dremel and a hole cutting tool. It\u0026rsquo;s a neat design that lets you cut perfect circles.    Dremel didn\u0026rsquo;t go all the way through\n   Finishing with the jigsaw\n   Hole cut\n   With some other cuts, it fits!\nHowever, the cutting bit on the Dremel was not long enough to go all the way though the toolbox, so I finished off with a jigsaw.    Both speakers fit!\nThen I did the same for the other speaker.    Tweeter holes cut\nI decided the two tweeters would go in the center above the woofers, because why not.    Amp and filters\n   Quick peek inside the filter\nThe two filters are just some passive components, I installed them because I didn\u0026rsquo;t have anything better to do with them. They still have zip ties on them from the last place they were mounted.\n   Filters installed\n   Automotive Goop\n   Tweeters glued in place\nTo hold the tweeters in, I kept the car theme running and used some automotive goop. To hold everything else in, I used some short wood screws.    Speakers wired up\n   Filters wired up\n   Filter close-up\n   Amplifier wiring complete\n   Front of the amplifier\n   Finished!\nI put the amplifier on the outside so that the volume can be adjusted while the case is closed. I drilled a hole in the case to allow the speaker wires to go through. It is powered with a 12v wall power supply, but a battery could be installed if I had one. Now the only question is what to do with it.\n","date":"4 January 2014","permalink":"/2014/01/toolbox-boombox.html","section":"Posts","summary":"While I was home for winter vacation, I quickly grew bored without access to my electronic tools and projects.","title":"Toolbox Boombox"},{"content":"A frequent problem in my apartment is the lack of a consistent sleep schedule among my roommates. It\u0026rsquo;s hard to tell when someone is asleep in their room, and when someone is gone and their door is closed. One of my roommates made a joke that I should build a device to track who is actually present in the apartment. So I did.\nI was already using a form of this, where I would ping local phone IP addresses to tell who was there. If there was a response, their phone was connected to the wifi and the person was probably there. I just made this into a neat setup using a raspberry pi and 4 LEDs.\nTo start, I needed a way to ping people from python. Some quick searching led me to ping.py (python-ping). This code implements an ICMP ping that python can use. From there, it\u0026rsquo;s simple to import RPi.GPIO to control LED\u0026rsquo;s and make them change depending on the ping status.\nMost of the change is in verbose_ping. Before, it just printed the output of the ping with three possible states: error, timeout, or response with a time. I modified it so the first two states turn the LED off, and the last one turns it on.\nPython function verbose_ping\nIt gets pin from a line in the main loop, which allows it to work with multiple LEDs and IPs. I had four people to track, so mine looks like this.\nMain loop that assigns IPs to LEDs\nEach IP has a GPIO pin assigned to it, which is connected to an LED. Every 10 seconds all the IPs are pinged, and the LEDs status is changed based on the result of the ping.\nNow it is simple to tell who is in my apartment by looking at the LEDs. If their light is on, they are there. If their light is off, they are not there.\nIt worked well for it\u0026rsquo;s purpose, with a few problems. iPhones only connect to wifi when the screen in on, so it only shows when iPhone users are using their phone. For androids it works as intended. It also doesn\u0026rsquo;t work if the person leaves their phone at the apartment, or never turns on wifi.\nNotes:\n My code has logging in it, but it\u0026rsquo;s only for debugging. This could be used to test a ping to any IP, not just local ones. Someone could build an alarm if their server goes down. The complete code is on Bitbucket. The script needs to be run as sudo for the ping and GPIO access.  ","date":"28 December 2013","permalink":"/2013/12/raspberry-pi-visual-ping-indicator.html","section":"Posts","summary":"A frequent problem in my apartment is the lack of a consistent sleep schedule among my roommates.","title":"Raspberry Pi Visual Ping Indicator / Roommate Tracker"},{"content":"After my Raspbery Pi Internet LED Control project, I wanted to try reading sensors from my room on to the internet. The only sensors I had around were thermistors, a type of resistor that changes resistance based on the temperature. Thermistors are analog sensors, and the Raspberry Pi does not have an analog-to-digital converters (ADC) built in. An external ADC is needed to measure analog sensors. Most tutorials use the MCP3008 chip for this, but I had the MCP3208, which is just an MCP3008 with higher resolution. I found a great tutorial to measure temperature using the MCP3008 with a more modern temperature sensor.    MCP3208 and thermistor connected\n Pinout [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) [](http://www.blogger.com/blogger.g?blogID=6889717346319980874)MCP 3208 Pin Pi GPIO Pin # Pi Pin Name [](http://www.blogger.com/blogger.g?blogID=6889717346319980874)\\============== =============== ============= [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) 16 VDD 1 3.3 V [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) 15 VREF 1 3.3 V [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) 14 AGND 6 GND [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) 13 CLK 23 GPIO11 SPI0\\_SCLK [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) 12 DOUT 21 GPIO09 SPI0\\_MISO [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) 11 DIN 19 GPIO10 SPI0\\_MOSI [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) 10 CS 24 GPIO08 CE0 [](http://www.blogger.com/blogger.g?blogID=6889717346319980874) 9 DGND 6 GND  Pinout to connect Pi to MCP3208 The tutorial code works fine for modern sensors, but I had to adjust it to work with a thermistor. I needed to be able to calculate the resistance of the thermistor using the ADC, so I created a voltage divider with the 1K ohm thermistor and a 1K ohm resistor.    Voltage divider circuit. I\u0026rsquo;m using the photoresistor symbol for the thermistor This circuit allows me to read the voltage and calculate resistance of the thermistor, and is simple to implement in python.\nPython code to read thermistor\nUnfortunately the reason no one sane uses thermistors anymore is because they have a non-linear relation between temperature and resistance. This means to calculate temperatures from resistance a lookup table has to be used for maximum accuracy. However, there are equations that are close enough for me. I used the Steinhart Hart Equation: Temp = 1/(a + b[ln(ohm)] + c[ln(ohm)]^3) . To complicate it further, I had no idea who made the thermistors I was using, only that they read 1K ohms at 25 degrees celsius. Luckily I found an online thermistor calculator that calculated the values for me. I discovered by comparing values from the calculator to a thermometer in my room that the best curve for my thermistors was curve R (-6.2%/C @ 25C) Mil Ratio X. Python function to get °C from thermistor\nI created a function in python: temp_get(). When provided with the value of a pin on the MCP3208, this function calculates and returns the temperature in °C. One problem I encountered was python rounding part of the calculation up to 0. The third part of the equation (c[ln(ohm)]^3) was rounded up to 0 instead of the actual value. This threw off all my readings, but I was able to compensate by subtracting 4 from the final value. Then I created a loop to take temperature readings once a minute and save them in a file, which I can then import to google drive and make a nice graph from.\n   Recorded room temperature over one hour. Interactive version here\nAlthough this room temperature graph is a cool proof of concept, it\u0026rsquo;s not very exciting or even useful. I added code to record the time of the recording and built a second sensor to go outside.    Thermistor attached to cable and soldered in\nI picked out a fairly long cable from my parts pile and added a thermistor at the end, then covered it in heat shrink tubing. I measured the resistance in the cable to be 0.1 ohm, not high enough to mess with my readings.    Heat shrinked sensor\nThen I took the sensor and placed it under my window so it could read from outside.\n   Outdoor sensor in place\nI was worried about my window crushing the cable, but it still worked fine. It\u0026rsquo;s not a long-term solution though. The sensor cable is connected to another voltage divider on digital channel 1.\n   Terminal output of the program\nThen I modified the code to record both sensors and the time from strftime in the log file.    Recorded outside and inside temperatures over 12.2 hours. Interactive version here\nThis graph is more exciting, you can see the exact time that the temperature outside gets cooler than the temperature inside. My next goal was to log the temperatures for an entire day.\n   Recorded outside and inside temperatures on August 3rd. Interactive version here\nThe August 3rd graph is much more interesting, but it has a few anomalies. In the morning around 2:30 the temperature goes up and then goes back down again. This was probably caused by the sprinkler systems outside my window. More obviously, the huge temperature spike in the morning. No, it does not reach 40°C when the sun rises only to drop to 28 °C a few hours later. This huge spike is caused by the sun hitting the sensor directly and warming it up beyond the actual temperature. To verify my theories about the analmonies I recorded another day of temperatures.    Comparison of recorded temperatures on August 3rd and August 5th. Interactive version here\nWhen the two graphs are compared, it is easy to see that the 2:30 anomaly is gone, but the sun anomaly is still present. To verify my theory about the sun anomaly, I needed another source of temperature. Ideally I would have place another sensor outside in the shade all day, but that was not practical for me. Instead I used python-weather-api to get the temperature from weather.com and then record it along with my temperatures.\n   Comparison of recorded and internet temperatures on August 6th. Interactive version here\nThe weather.com temperatures verified my sun theory, while still follwing the same general line. Also, the internet temperature gets a lot lower than my recorded temperatures, which indicates that my sensor is still being heated through the window. There is something strange in the August 6th graph, the sun temperature goes down for a bit before going back up. This was probably caused by a car parking in front of my window and shading the sensor from the sun, then driving off later. I\u0026rsquo;m still working on this project, with aims to use the Pi as a webserver and display temperatures and graphs automatically. Maybe I will even build a wireless temperature sensor and put it somewhere shady.\nFor this project I put the code in a git repository on bitbucket:\nhttps://bitbucket.org/pschow/rpiadctherm/overview\nThe script for recording the temperatures is basiclogmcp.py\nNote: Even with this data my roommates still can\u0026rsquo;t understand why to keep the windows closed during the day and open at night. Oh well. # Comments: # Great Post. Could you eloberate a little on the lo\u0026hellip; # Abhiram - Sep 5, 2013\nGreat Post. Could you eloberate a little on the log portion?\n#### Thanks! The problem is with the part of the equati... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - Sep 5, 2013 Thanks! The problem is with the part of the equation that multiplies 0.000000125008328 (C) by the natural log of the resistance. In python it always comes out to zero, even though it should actually be something like 7.6687768*10^-7. There\u0026rsquo;s probably a good way to fix it, but I never figured it out.\n#### Consider referencing this if you ever go wireless ... [John Wayne](https://www.blogger.com/profile/17119087286324061921 \"noreply@blogger.com\") - Dec 4, 2013 Consider referencing this if you ever go wireless with your sensor. Its a great tutorial using a thermoistor and XRF wireless transcievers!\nhttp://openmicros.org/index.php/articles/79-computer-projects/241-python-thermostat-control\n#### Great sir [Unknown](https://www.blogger.com/profile/11573839639826658296 \"noreply@blogger.com\") - Apr 6, 2016 Great sir\n#### Your sample schematic above (with the photoresisto... [Steve](https://www.blogger.com/profile/06936373823068615688 \"noreply@blogger.com\") - May 1, 2016 Your sample schematic above (with the photoresistor standing in for the thermister) shows it connected to a digital pin.. Dont you mean that to be an analog pin? I thought that was representing an analog pin on the ADC?\n#### You're right, it should be connected to an ana... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - May 1, 2016 You\u0026rsquo;re right, it should be connected to an analog pin. I\u0026rsquo;m not sure why I wrote digital there.\n#### Hi, nice tutorial. Just wanted to point out that p... [Josh](https://www.blogger.com/profile/01019188535279626568 \"noreply@blogger.com\") - May 6, 2016 Hi, nice tutorial. Just wanted to point out that part off your implementation of the S-H equation in your code is wrong and ought to be corrected. In the c[ln(ohms)]^3 part of the equation, only the value of ln(ohms) should be cubed before multipling by c. In your code, you multiply by c before cubing which will give these very small numbers you describe.\n#### Cześć czy Ty wiesz jaka jest różnica pomiędzy prze... [Unknown](https://www.blogger.com/profile/10749556602460641281 \"noreply@blogger.com\") - Aug 6, 2016 Cześć czy Ty wiesz jaka jest różnica pomiędzy przetwornikiem 10 a 12 bitowym. Napisałeś rozwiązanie dl 10 bitowego mcp3008 a nie 12bitowego mcp3208\n#### Great tutorial, thanks for the write up. I've... [cheekygnome](https://www.blogger.com/profile/02203120669718761396 \"noreply@blogger.com\") - Sep 0, 2016 Great tutorial, thanks for the write up. I\u0026rsquo;ve just begun to play around with my RPi as a weather station, beginning with using a DHT11 sensor yesterday. My ultimate goal is to have an accurate home built weather station. This morning I was worrying over the long term accuracy of these cheap Chinese made DHT sensors (the 11 and 22) and started to consider thermistors which lead me to your page. In the long run do you think the thermistor is the best way to go? Seems like all the maker plans I come across use DHT sensors and I\u0026rsquo;m wondering if it isn\u0026rsquo;t just due to simplicity.\n#### I re-did the math from unknown suggestion and it s... [Unknown](https://www.blogger.com/profile/01271709557159599292 \"noreply@blogger.com\") - Oct 0, 2016 I re-did the math from unknown suggestion and it seems to be right\u0026hellip;im getting values that are real close to my other store bought sensor setups.\n#### i re-did the math from unknown suggestion...it wor... [Unknown](https://www.blogger.com/profile/01271709557159599292 \"noreply@blogger.com\") - Oct 0, 2016 i re-did the math from unknown suggestion\u0026hellip;it works out for me\u0026hellip;values are better and closer to my test math.\n#### I have been using a 3008, but have a 3208, so am c... [Unknown](https://www.blogger.com/profile/18424698271673981298 \"noreply@blogger.com\") - Nov 1, 2016 I have been using a 3008, but have a 3208, so am considering switching. A couple of questions, if I may\u0026hellip;\n1. In my 3008, when I put in a reference voltage (a resistance to 3.3V and a diode to ground) into channel 1, I get a lot of variability in my readings \u0026ndash; 503, 506, 510, etc.) Is that a limitation of the chip? Seems like very poor resolution, and it is driving me nuts. Or is the power supply to my board varying?\n2. The 3208 has 12-bit resolution, but in your code, you are dividing by 1024 instead of 4096. Why is this?\n#### Warren.. I'm not the one who made the project... [Steve](https://www.blogger.com/profile/06936373823068615688 \"noreply@blogger.com\") - Feb 6, 2017 Warren.. I\u0026rsquo;m not the one who made the project but I saw your comment.. why are you using a diode to ground? His original circuit shows a resistor.. you need the resistor to make the voltage devider circuit.. I wonder if that\u0026rsquo;s why you\u0026rsquo;re having the problem?\n#### [Unknown](https://www.blogger.com/profile/07947484845292656605 \"noreply@blogger.com\") - Mar 4, 2017 This comment has been removed by the author.\n","date":"16 August 2013","permalink":"/2013/08/monitoring-temperatures-using-raspberry.html","section":"Posts","summary":"After my Raspbery Pi Internet LED Control project, I wanted to try reading sensors from my room on to the internet.","title":"Monitoring Temperatures Using a Raspberry Pi and a MCP3208 ADC with Thermistors "},{"content":"While browsing a thrift store in Boulder, I found a great deal on a shower radio. I picked it up, figuring any problems with it could be fixed. The model is SR-25.\n   I got home and put in four AA\u0026rsquo;s, and nothing happened. Time to open it up! It was closed via six screws under pads on the back.    Inside the radio. Note the clear plastic speaker.\nAfter some testing, I determined the problem was with the clock/timer module on the front. This also controls the power to the radio but the whole thing was not working for some reason.    Broken clock/timer\nThe clock/timer was connected to the main radio board with a ribbon cable. Luckily the pinout was labeled and I discovered that the radio turns on when the battery voltage is applied to the power pin.\n   Clock ribbon cable pinout\n\\\nNow I just needed a way to control the power. The default power button is a momentary tactile switch, so something new is needed. First I tried to use the volume control knob, but I couldn\u0026rsquo;t get that to work. Then I looked at the AM/FM/TV tuner selector switch and notice that only half of it was used.\n   AM/FM/TV tuner switch\nI decided to use the unused half of this switch, although it would limit the radio to FM only.    Switch wired in\nNow when the switch is set to the middle position (FM) the power is given to the power pin from the batteries.    Working radio\nAs a bonus, the TUNE light still works because it is separate from the clock board.\n","date":"13 August 2013","permalink":"/2013/08/shower-radio-repair.html","section":"Posts","summary":"While browsing a thrift store in Boulder, I found a great deal on a shower radio.","title":"Shower Radio Repair"},{"content":"Recently I obtained a Raspberry Pi. This exciting development board offers many features that quickly made it the center of a large community of makers. It runs embedded Linux and can be used for a wide variety of projects. To me, the most exciting feature is the web connectivity of the Pi. The built-in Ethernet port allows for projects that are controlled or control the internet. I decided to make a webserver running from the Pi to control a LED.\nThe Raspberry Pi comes with a general purpose input/output (GPIO) header attached. However, this header is all male pins and I did not have any ribbon cables or other male connectors. To fix this I soldered female pins to the second expansion header on the board, which allows me to use male jumpers.\n   8 female headers attached to board\nFrom there it was simple to connect an LED to the Raspberry Pi.\n   LED running from Raspberry Pi\nI knew that I wanted to do some kind of web-controlled interface. I decided to use Python for the language because I had preformed all the LED tests in it and found it simple enough. First I used webpy to host a simple webpage from the Raspberry Pi. With a google search I found some simple code using webpy to control the GPIO pins on the Raspberry Pi. This code works, but it requires the user to visit separate urls to control the LED. I modified the code to have hyperlinks on the homepage that control the LED and also show the status of the LED.\n\u0026lt;![CDATA[ $def with (status) $if status: LED Status: $status$else: LED status unknown h1 {font-size:250%;} h2 {font-size:200%;} p {font-size:100%;} \nTurn On\nTurn Off]]\u0026gt;\nVideo of me controlling the LED from my phone\nThen I sent the address to some of my friends to test out. After a few minutes of LED light show in my room, they got bored. The webpage indicator only updated when the page was refreshed, and there wasn\u0026rsquo;t any way to tell if you were actually doing anything in real life. Video of someone else controlling the LED from the internet\nTo make it more entertaining, I added a webcam using my old android phone the the IP Webcam app.    Webcam monitoring LED\nBeing able to control and see a light over the internet is pretty cool, but my friends wanted more control! After a disappointing search though my parts bin, I realized I only had red LEDs. Still, I used four LEDs and a note card with labels to allow make things more interesting.\n   Webcam monitoring four LEDs\nThe code was modified to allow the controlling of 4 LEDs, and a new HTML template was created that allowed the control and embedded the webcam.\nPython code\nHTML template\nThe code works by creating a global variable array with 4 elements. Each LED has it\u0026rsquo;s own element that indicates if it is on (1) or off (0). For example: when the \u0026ldquo;/?turn=1\u0026rdquo; url is entered, the first LED is toggled on or off through GPIO, and the command is printed to the terminal, then the main page is updated with the status of the LED and the user is returned there. Video with the entire four LED setup in action\n   Comments: # Great Project! How did you make your webpy webpag\u0026hellip; # Anonymous - Jul 0, 2014\nGreat Project!\nHow did you make your webpy webpage available to your friends?\nWere they using an internet connection that was outside of your local home network?\nThanks\n#### Yes, I had it connected to the internet. This isn\u0026... [Paul Schow](https://www.blogger.com/profile/02139879554145337777 \"noreply@blogger.com\") - Jul 0, 2014 Yes, I had it connected to the internet. This isn\u0026rsquo;t really safe or secure though, so I only had it up for a short amount of time.\n","date":"22 June 2013","permalink":"/2013/06/raspberry-pi-internet-led-control.html","section":"Posts","summary":"Recently I obtained a Raspberry Pi.","title":"Raspberry Pi Internet LED Control"},{"content":"Scale Model Solar Systemsare pretty cool. Currently the largest one is in Sweden with a bigger one under construction in England.\nWhat if there was a model that spanned the United States?\nI decided to use the distance from San Francisco to Washington DC as a base length of 3932km (from Wolfram Alpha).\nThen I took the average AU distance of the planets (ending at Neptune) as a percentage and converted that to km in the SF to DC distance.\nHere is the spreadsheet I made for the data.\nI used Google Earth to estimate the location of each planet in the US.\nHere is the map of the points on Google Maps.\nView US Scale Solar system in a larger map\nCalculating the ratio of scale km to real km turns out to be\n1 km:1.14x106 km\nScaling the planets according to this ratio (also on the spreadsheet) unfortunately results in a 1,200m diameter sun in SF. The most practical way would probably be to use a different scale for the planets, and use a 1.2m (diameter) sun in SF, and a 4cm mercury.\nYes, I did post this on Reddit first, to make sure my math was correct.\n","date":"5 March 2013","permalink":"/2013/03/us-sized-scale-model-solar-system.html","section":"Posts","summary":"Scale Model Solar Systemsare pretty cool.","title":"US-sized scale model solar system"},{"content":"When I got my Digilent Basys 2, I was not able to find a good tutorial for how to set it up in Xilinx ISE Webpack. After lots of trial and error, I figured out the correct process. Then I made this tutorial so other people would be able to see how it is done.\nLink to tutorial PDF\n Comments: # Thanks for sharing. It was useful to me like nothi\u0026hellip; # Unknown - Aug 2, 2013\nThanks for sharing. It was useful to me like nothing else\n#### Thank you, needed to change to Jtag clock. Now I k... [TD](https://www.blogger.com/profile/13723239047099927866 \"noreply@blogger.com\") - May 4, 2014 Thank you, needed to change to Jtag clock. Now I know how to do it.\nRC\nBelgium\n","date":"5 April 2012","permalink":"/2012/04/digilent-basys-2-setup-tutorial.html","section":"Posts","summary":"When I got my Digilent Basys 2, I was not able to find a good tutorial for how to set it up in Xilinx ISE Webpack.","title":"Digilent Basys 2 Setup Tutorial"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]